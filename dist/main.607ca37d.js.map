{"version":3,"sources":["src/logic/speech.js","src/logic/elements.js","src/main.js"],"names":["recognition","SpeechRecognition","window","webkitSpeechRecognition","error","continuous","interimResults","text","document","getElementById","textWrapper","console","warn","textContent","start","onresult","e","resultArray","string","Array","from","results","map","r","transcript","join","scroll","scrollHeight"],"mappings":";AAQA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,iBAAA,EARA,IACWA,EADLC,EAAoBC,OAAOD,mBAAqBC,OAAOC,wBAQ7D,QAAA,YAAA,EALCH,QAAAA,YAAAA,OADgC,IAAtBC,EACI,CAAEG,MAAO,4FAET,IAAIH,EAEnBD,EAAYK,YAAa,EACzBL,EAAYM,gBAAiB;;ACPtB,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,YAAA,QAAA,UAAA,EADA,IAAMC,EAAOC,SAASC,eAAe,QACrC,QAAA,KAAA,EAAA,IAAMC,EAAcF,SAASC,eAAe,eAA5C,QAAA,YAAA;;ACeN,aAhBD,IAAA,EAAA,QAAA,qBACA,EAAA,QAAA,uBAEIT,EAAYI,YAAAA,OACfO,QAAQC,KAAKZ,EAAYI,YAAAA,OACpBS,EAAAA,KAAAA,YAAcb,EAAYI,YAAAA,QAEnBU,EAAAA,YAAAA,QACAC,EAAAA,YAAAA,SAAW,SAACC,GACjBC,IACAC,EADcC,MAAMC,KAAKJ,EAAEK,SACNC,IAC1B,SAAAC,GAAKA,OAAAA,EAAE,GAAGC,aACTC,KAAK,IACFZ,EAAAA,KAAAA,YAAcK,EACPQ,EAAAA,YAAAA,OAAO,EAAGhB,EAAYiB,YAAAA","file":"main.607ca37d.js","sourceRoot":"..","sourcesContent":["const SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition\nexport let recognition\nif (typeof SpeechRecognition === \"undefined\") {\n\trecognition = { error: 'This browser does not support speech recognition. Please open this app in Google Chrome.'}\n} else {\n\trecognition = new SpeechRecognition()\n}\nrecognition.continuous = true\nrecognition.interimResults = true","export const text = document.getElementById('text')\nexport const textWrapper = document.getElementById('textWrapper')","import { recognition } from '/src/logic/speech'\nimport { text, textWrapper } from '/src/logic/elements'\n\nif (recognition.error) {\n\tconsole.warn(recognition.error)\n\ttext.textContent = recognition.error\n} else {\n\trecognition.start()\n\trecognition.onresult = (e) => {\n\t\tconst resultArray = Array.from(e.results)\n\t\tconst string = resultArray.map(\n\t\t\tr => r[0].transcript\n\t\t).join('')\n\t\ttext.textContent = string\n\t\ttextWrapper.scroll(0, textWrapper.scrollHeight)\n\t}\n}"]}